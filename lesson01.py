# однострочный комментарий

'''
многострочный комментарий

'''

"""
многострочный комментарий

"""
"""
1. объявление переменной
поименованная область оперативной памяти
нельзя начинать имя с цифры, но имя может содержать цифры
нельзя: пробелы, кириллицу
можно: латиницу,подчеркивание
не должно быть регистра в имени
python регистрозависимый! - разные переменные
PEP8!
"""
a = 1
print(a)

"""
2. типы данных в Python
динамическая типизация - тип переменной определяется в момент инициализации
отражает:
- кол-во опреративной памяти
- диапазон допустимых значений
- допустимые операции
- формат отображения, представления
типы:
Скалярные (простые) типы - могут содержать только одно значение в момент времени
	int - целые числа
	float - дробные
	complex - комплексные
	bool - логические флаги
	str - строки 
	bytes - байтовые строки
Структурные типы (сложные, составные):
	- tuple - кортеж
	- list - список
	- set - множество
	- dict - словарь
	- object - объект
Специальные типы: None - пустота, ничего, отсутствие значения
"""

i1 = 10
i2 = 0b100	#двоичная СС
i3 = 0o777	#восьмеричная СС (0-7)
i4 = 0x2F	#шестнадцатеричная СС (0-15 = 0-9 + A-F)
f1 = 1.23
f2 = 1e6	#10 в 6 степени(2e6 - 2млн)
f3 = 123e-3	#0.123
c1 = 3.14j	#комплексное число
b1 = True
b2 = False
s1 = '\tHello\n'	#\t, \n - непечатаемые символы - табуляция, перенос строки
s2 = "Python"
s3 = '''когда нужно положить в переменную много строк, вместо того, чтобы писать
			вручную все символы табуляуии, переноса строки...проч.
			но так же работает экранирование и непечатаемые символы
'''
s4 = """Hello '" world!!!"""
s5 = u''	 #для обозначения строки в Unicode - актуально для Python2
s6 = r'^\d+$'	#регулярное выражение, r - обозначение сырой строки (raw string) - как написали, так и увидим
bs1 = b'Hello'	#байтовая строка, можно закодировать в любую кодировку
abc = None
abc = 

t = (1, 1.2, True, 'str', (1, 2, 3))
print(t[2])	#True
l = [1, 1.23, (45, 1), [], 'kl']
print(l[0])	#True
s = {1, 2, 2, 25}	#выведет при печати {1, 2, 25}, поскольку множество уникально и упорядочено!
s1 = {2, 2, True}	#print - {1, 2} + в множество не положить изменяемые типы данных (список)
s2 = {1, 5, 8, {}}	#ошибка будет при печати
s2 = {}	# так нельзя звдвть пустое множество, поскольку так задаются словари. чтобы задать пустое множество использовать set() 
s2 = set()
# словарь:	ключи - уникальны!
d = {
'key1': 1,
'key2': {1, 2, 3}
}



